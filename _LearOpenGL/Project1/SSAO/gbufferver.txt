#version 330 core
layout(location=0)in vec3 aPos;
layout(location=1)in vec3 aNormal;
layout(location=2)in vec2 aTexcoords;

out VS_OUT{
	vec2 Texcoords;
	vec3 Normal;
	vec3 FragPos;
}vs_out;

uniform bool inversedNormal;

uniform mat4 projection,view,model;

void main()
{
	vec4 viewPos=view*model*vec4(aPos,1.0);
	vs_out.FragPos=viewPos.xyz;
	vs_out.Texcoords=aTexcoords;
	
	mat3 normalMatrix=transpose(inverse(mat3(view*model)));
	vs_out.Normal=normalMatrix*(inversedNormal?-aNormal:aNormal);
	
	gl_Position=projection*viewPos;
}