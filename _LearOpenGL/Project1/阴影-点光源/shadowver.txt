#version 330 core
layout(location=0)in vec3 aPos;
layout(location=1)in vec3 aNormal;
layout(location=2)in vec2 aTexcoords;

out VS_OUT{
	vec3 FragPos;
	vec3 Normal;
	vec2 Texcoords;
}vs_out;

uniform mat4 projection,view,model;
uniform bool reverse_normal;

void main()
{	
	vs_out.FragPos=vec3(model*vec4(aPos,1));
	if(reverse_normal)//使外面包围盒的光照可以进入 
		vs_out.Normal=transpose(inverse(mat3(model)))*(-1*aNormal);
	else
		vs_out.Normal=transpose(inverse(mat3(model)))*aNormal;
	vs_out.Texcoords=aTexcoords;

	gl_Position=projection*view*model*vec4(aPos,1);
}