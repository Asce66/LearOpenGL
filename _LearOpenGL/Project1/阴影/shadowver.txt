#version 330 core
layout(location=0)in vec3 aPos;
layout(location=1)in vec3 aNormal;
layout(location=2)in vec2 aTexcoords;

out VS_OUT{
	vec3 FragPos;
	vec3 Normal;
	vec2 Texcoords;
	vec4 FragPosLightSpace;
}vs_out;

uniform mat4 projection,view,model,lightSpaceMatrix;

void main()
{
	vs_out.FragPos=vec3(model*vec4(aPos,1));
	vs_out.Normal=transpose(inverse(mat3(model)))*aNormal;
	vs_out.Texcoords=aTexcoords;
	vs_out.FragPosLightSpace=lightSpaceMatrix*vec4(vs_out.FragPos,1);

	gl_Position=projection*view*model*vec4(aPos,1);
}